(()=>{"use strict";const e=require("dotenv"),t=require("cors"),s=require("express"),a=require("sequelize"),o="postgres://mainuser:8AQluCn0KKyEy7FSqXnCiyG1rEwn0nEd@dpg-cmni2nmn7f5s73ct39h0-a.oregon-postgres.render.com/ztechnology_db";console.log(o);const r=new a.Sequelize(o,{dialectOptions:{ssl:!0,useUTC:!0},timezone:"-05:00"}),i={id:{type:a.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0}},d={createdAt:"createdAt",updatedAt:"updatedAt"},n=["motherboard","ram","cpu","powerSupply","graphicCard"],u=(e=>{class t extends a.Model{}return t.init({...i,name:{type:a.DataTypes.STRING,unique:!0,allowNull:!1},description:{type:a.DataTypes.STRING}},{...d,modelName:"role",sequelize:e}),t.beforeSync((()=>console.log("before creaing the table"))),t.afterSync((()=>console.log("before creaing the table"))),t})(r),c=(e=>{class t extends a.Model{}return t.init({...i,names:{type:a.DataTypes.STRING},document:{type:a.DataTypes.STRING,unique:!0,allowNull:!1,validate:{isNumeric:!0,isExactLength(e){if(10!==String(e).length)throw new Error("El campo numérico debe tener exactamente 10 dígitos.")}}},email:{type:a.DataTypes.STRING,unique:!0,allowNull:!1,validate:{isEmail:!0}},password:{type:a.DataTypes.STRING,allowNull:!1},retriesPassword:{type:a.DataTypes.TINYINT},timerDisableAccount:{type:a.DataTypes.DATE},state:{type:a.DataTypes.BOOLEAN,allowNull:!1}},{...d,modelName:"user",sequelize:e}),t.beforeSync((()=>console.log("before creaing the table"))),t.afterSync((()=>console.log("before creaing the table"))),t})(r),l=(e=>{class t extends a.Model{}return t.init({...i,description:{type:a.DataTypes.STRING,allowNull:!1},discountType:{type:a.DataTypes.ENUM(["Percentage","Standard"]),validate:{correctDiscount(e){if(!["Percentage","Standard"].includes(e))throw new Error(`Quote discount type must be one of ${["Percentage","Standard"].toString()}`)}}},discount:{type:a.DataTypes.FLOAT},total:{type:a.DataTypes.INTEGER,allowNull:!1},subTotal:{type:a.DataTypes.INTEGER},deliveryType:{type:a.DataTypes.ENUM(["Premium","Paid","Standard"]),allowNull:!1,validate:{correctDiscount(e){if(!["Premium","Paid","Standard"].includes(e))throw new Error(`Quote delivery type must be one of ${["Premium","Paid","Standard"].toString()}`)}}},state:{type:a.DataTypes.ENUM(["Created","Canceled","Completed"]),allowNull:!1,validate:{correctDiscount(e){if(!["Created","Canceled","Completed"].includes(e))throw new Error(`Quote state must be ${["Created","Canceled","Completed"].toString()}`)}}}},{...d,modelName:"quote",sequelize:e}),t.beforeSync((()=>console.log("before creaing the table"))),t.afterSync((()=>console.log("before creaing the table"))),t})(r),p=(e=>{class t extends a.Model{}return t.init({...i,names:{type:a.DataTypes.STRING,allowNull:!1},document:{type:a.DataTypes.STRING,unique:!0,allowNull:!1,validate:{isNumeric:!0,isExactLength(e){if(10!==String(e).length)throw new Error("El campo numérico debe tener exactamente 10 dígitos.")}}},city:{type:a.DataTypes.STRING},address:{type:a.DataTypes.STRING},phone:{type:a.DataTypes.STRING},email:{type:a.DataTypes.STRING,unique:!0,allowNull:!1,validate:{isEmail:!0}}},{...d,modelName:"customer",sequelize:e}),t.beforeSync((()=>console.log("before creaing the table"))),t.afterSync((()=>console.log("before creaing the table"))),t})(r),m=(e=>{class t extends a.Model{}return t.init({...i,name:{type:a.DataTypes.STRING,allowNull:!1},type:{type:a.DataTypes.ENUM([...n]),allowNull:!1,validate:{correctType(e){if(!n.includes(e))throw new Error(`Product type must be one of ${n.toString()}`)}}},description:{type:a.DataTypes.STRING,allowNull:!1},price:{type:a.DataTypes.FLOAT,allowNull:!1},available:{type:a.DataTypes.BOOLEAN,allowNull:!1}},{...d,modelName:"product",sequelize:e}),t.beforeSync((()=>console.log("before creaing the table"))),t.afterSync((()=>console.log("before creaing the table"))),t})(r),h=require("bcrypt");function y(e,t){let s={};if(e instanceof a.ValidationError){const{errors:t}=e;let a=[];t.forEach((e=>{const{message:t,path:s,value:o}=e,r={message:t,path:`${s} ${o}`};a.push(r)})),s={message:"SEQ_ERROR",data:a}}else{const{message:t,status:a,path:o}=e;s={message:t,status:a,path:o}}return t.status(e.status).json(s)}const w=require("jsonwebtoken"),g=async(e,t,s)=>{console.log("_____________");try{const t=await e.headers.authorization.split(" ")[1],a=await w.verify(t,"ztechnologyAPI");console.log(a);const o=await a;e.user=o,s()}catch(e){return t.status(401).json({auth:!1,message:"ERROR - Petition over non authenticated user"})}},f=(0,s.Router)();f.post("/create",(async(e,t)=>{console.log("Peticion recibida para crear",e.body);const{names:s,document:a,email:o,password:r,role:i,state:d,idRequester:n}=e.body;try{const e=await c.findOne({where:{id:n},include:[{model:u,attributes:{exclude:["createdAt","updatedAt","id"]}}]});if("USER"==e?.dataValues?.role?.dataValues?.name)throw{message:"User has no priviligies to create another user, only ADMIN can",status:400,path:`Role ${e?.dataValues?.role?.dataValues?.name}`};if((await c.findAll({where:{email:o}})).length>0)throw{message:"Email already taken",status:400,path:`Email ${o}`};{const e=await u.findAll({where:{name:i}});if(0==e.length)throw{message:"Role Does no exist",status:400,path:`Role ${i}`};const n=await h.hash(r,10);console.log(n);const l=await c.create({names:s,document:a,email:o,password:n,state:d,roleId:e[0].dataValues.id,retriesPassword:3,timerDisableAccount:(new Date).addMinutes(-20)});return t.status(200).json({success:!0,message:"User Created successfully",data:l})}}catch(e){return e.status||(e.status=405),y(e,t)}})),f.delete("/delete/:idUser",g,(async(e,t)=>{console.log("=====_____Peticion recibida para eliminar",e.body);let s=e.params?.idUser;const{idUserRequester:a}=e.body;try{if(!await c.findOne({where:{id:s}}))throw{message:"User with does not exist",status:403,path:`Id ${s}`};const e=await c.findOne({where:{id:a},include:[{model:u,attributes:{exclude:["createdAt","updatedAt","id"]}}]});if(console.log(e),!e)throw{message:"User with does not exist",status:403,path:`Id ${s}`};if("ADMIN"!==e?.dataValues?.role?.name)throw{message:"User non Admin can't delete other users",status:403,path:`Id ${a}`};return await c.destroy({where:{id:s}}),t.status(200).json({success:!0,message:"User deleted succesfully"})}catch(e){return e.status||(e.status=405),y(e,t)}})),f.get("/getAll",g,(async(e,t)=>{console.log("=====_____Peticion recibida para eliminar",e.body);try{const e=await c.findAll({attributes:{exclude:["password","retriesPassword","timerDisableAccount"]},include:[{model:u,attributes:{exclude:["createdAt","updatedAt","id"]}}]});if(!e)throw{message:"There are no user/s",status:400,path:"Users"};return t.status(200).json({success:!0,message:"List Of all current users",data:e})}catch(e){return e.status||(e.status=405),y(e,t)}})),f.post("/get",g,(async(e,t)=>{console.log("=====_____Peticion recibida para eliminar",e.body);const{names:s,document:a,email:o,idRequired:r,state:i,roleId:d}=e.body;let n={};r&&(n.id=r),s&&(n.names=s),a&&(n.document=a),o&&(n.email=o),d&&(n.roleId=d),null!==i&&(n.state=i);try{const e=await c.findAll({attributes:{exclude:["password","retriesPassword","timerDisableAccount"]},where:{...n},include:[{model:u,attributes:{exclude:["createdAt","updatedAt","id"]}}]});if(console.log(n),!e||0==e.length)throw{message:"There are no user/s with the attributes searched",status:400,path:n};return t.status(200).json({success:!0,message:"User/s with desired search are those",data:e})}catch(e){return e.status||(e.status=405),y(e,t)}})),f.post("/modify/:idUser",g,(async(e,t)=>{console.log("=-=-=--=-=-=-=-=Peticion recibida para modificar usuario",e.body);let s=e.params?.idUser,{names:a,document:o,email:r,password:i,roleId:d,state:n,idRequester:l}=e.body,p={};a&&(p.names=a),o&&(p.document=o),r&&(p.email=r),i&&(p.password=await h.hash(i||"",10)),d&&(p.roleId="ADMIN"==d?1:2),null!==n&&(p.state=n),console.log(p.roleId,l,s);try{const e=await c.findOne({where:{id:[l]},include:[{model:u,attributes:{exclude:["createdAt","updatedAt"]}}]});if(console.log("_+_+_+_+_",e,e?.dataValues?.role?.dataValues),!e)throw{message:"Requester User does not exists",status:400,path:`IdUserRequester ${l}`};if(!await c.findOne({where:{id:[s]},include:[{model:u,attributes:{exclude:["password","retriesPassword","timerDisableAccount","state"]}}]}))throw{message:"Requested Modify User does not exists",status:400,path:`IdUserRequested ${s}`};let a,o=e?.dataValues?.role?.dataValues?.name;if("ADMIN"==o)return"true"==p.state&&(p.timerDisableAccount=(new Date).addMinutes(-20),p.retriesPassword=3),console.log(p),await c.update({...p},{where:{id:s}}),t.status(200).json({success:!0,message:"User modified succesfully",data:{id:s,names:p.names,document:p.document,email:p.email,state:p.state,role:o,createdAt:e?.dataValues?.createdAt}});if(1==p.roleId)throw{message:"Users can not change their own role status, please ask to a Admin manager",status:401,path:`roleRequired ${s},IdRequester ${l}`};if(s!==l)throw{message:"Users can change information only of their own user",status:401,path:`IdRequired ${s},IdRequester ${l}`};return a=await c.update({...p},{where:{id:s}}),t.status(200).json({success:!0,message:"User modified succesfully",data:{id:s,names:p.names,document:p.document,email:p.email,state:p.state,role:o,createdAt:e?.dataValues?.createdAt}})}catch(e){return e.status||(e.status=405),y(e,t)}}));const b=f,_=(0,s.Router)();_.post("/login",(async(e,t)=>{const s=parseInt("120");console.log("Peticion recibida",e.body,s,typeof s,"120");const{email:a,password:o}=e.body,r=new Date;try{if(!a&&!o)throw{message:"Email and password not present",status:400,path:`Email ${a},Password ${o}`};const e=await c.findOne({where:{email:a},include:[{model:u,attributes:{exclude:["createdAt","updatedAt","id"]}}]});if(!e)throw{message:"User Email does not exists",status:400,path:`Email ${a}`};if(r<e?.dataValues?.timerDisableAccount||0==e?.dataValues?.state)throw{message:`User is banned for ${parseInt(r.minutesDiff(e?.dataValues?.timerDisableAccount))} minutes, please wait or contact your admin`,status:400,path:`StateUser ${e?.dataValues?.state},RetriesPassword ${e?.dataValues?.retriesPassword}`};h.compare(o,e?.dataValues?.password).then((async a=>{if(!a){if(1==e?.dataValues?.retriesPassword){const t=r.addMinutes(s);throw await c.update({state:!1,timerDisableAccount:t,retriesPassword:3},{where:{id:e?.dataValues?.id}}),{message:`User has been banned for ${s} minutes. Please wait or contact your ADMIN`,status:401,path:"RetriesPasswordLeft 0"}}throw await c.update({retriesPassword:e?.dataValues?.retriesPassword-1},{where:{id:e?.dataValues?.id}}),{message:`Invalid - Incorrect password, only ${e?.dataValues?.retriesPassword-1} tries left`,status:401,path:"Password"}}console.log(e?.dataValues?.state,e?.dataValues?.retriesPassword);const o=w.sign({userId:e.dataValues.id,useremail:e.dataValues.email},"ztechnologyAPI",{expiresIn:"2d"}),{id:i,names:d,document:n,email:u,state:l,roleId:p,role:m,createdAt:h}=e.dataValues;return c.update({state:!0,timerDisableAccount:r.addMinutes(-20),retriesPassword:3},{where:{id:e?.dataValues?.id}}),t.status(200).json({success:!0,message:"Login Succeess",token:o,data:{user:{id:i,names:d,document:n,email:u,state:l,role:m?.name,createdAt:h}}})})).catch((e=>(e.status||(e.status=405),y(e,t))))}catch(e){return console.log("______________________________",e),e.status||(e.status=405),y(e,t)}}));const A=_,T=(0,s.Router)();T.post("/create",g,(async(e,t)=>{console.log("______Peticion recibida para crear",e.body);const{names:s,document:a,email:o,city:r,address:i,phone:d,idRequester:n}=e.body;try{if(!await c.findOne({where:{id:[n]}}))throw{message:"Requester User does not exists",status:400,path:`IdUserRequester ${n}`};const e=await p.create({names:s,document:a,email:o,city:r,address:i,phone:d,userId:n});return t.status(200).json({success:!0,message:"Customer Created successfully",data:e})}catch(e){return e.status||(e.status=405),y(e,t)}})),T.delete("/delete/:idCustomer",g,(async(e,t)=>{console.log("=====_____Peticion recibida para eliminar",e.body);let s=e.params?.idCustomer;try{if(!await p.findOne({where:{id:s}}))throw{message:"Requested Customer to delete does not exists",status:400,path:`IdCustomerRequested ${s}`};return await p.destroy({where:{id:s}}),t.status(200).json({success:!0,message:"Customer deleted succesfully"})}catch(e){return e.status||(e.status=405),y(e,t)}})),T.get("/getAll",g,(async(e,t)=>{console.log("=====_____Peticion recibida para modificar",e.body);try{const e=await p.findAll({include:[{model:c,attributes:{exclude:["password","retriesPassword","timerDisableAccount","state","createdAt","roleId","updatedAt"]}}]});if(!e)throw{message:"There are no customer/s",status:400,path:"Customers"};return t.status(200).json({success:!0,message:"List Of all current customer/s",data:e})}catch(e){return e.status||(e.status=405),y(e,t)}})),T.post("/get",g,(async(e,t)=>{console.log("=====_____Peticion recibida para modificar",e.body);const{names:s,document:a,email:o,city:r,address:i,phone:d,idRequired:n,userId:u}=e.body;let l={};n&&(l.id=n),s&&(l.names=s),a&&(l.document=a),o&&(l.email=o),r&&(l.city=r),i&&(l.address=i),d&&(l.phone=d),u&&(l.userId=u);try{const e=await p.findAll({include:[{model:c,attributes:{exclude:["password","retriesPassword","timerDisableAccount","state"]}}],where:{...l}});if(console.log(JSON.stringify(l)),!e||0==e.length)throw{message:"There are no Customer/s with the attributes",status:400,path:l};return t.status(200).json({success:!0,message:"Customer/s with desired search are those",data:e})}catch(e){return e.status||(e.status=405),y(e,t)}})),T.post("/modify/:idCustomer",g,(async(e,t)=>{console.log("=====_____Peticion recibida para modificar");let s=e.params?.idCustomer;const{names:a,document:o,email:r,city:i,address:d,phone:n}=e.body;let u={};a&&(u.names=a),o&&(u.document=o),r&&(u.email=r),i&&(u.city=i),d&&(u.address=d),n&&(u.phone=n);try{if((await p.findAll({where:{id:s}})).length<=0)throw{message:"Requested Modify Customer does not exist",status:400,path:`IdCustomerRequested ${s}`};const e=await p.update({...u},{where:{id:s}});return console.log(e.length),t.status(200).json({success:!0,message:"Customer modified succesfully"})}catch(e){return console.log(e),e.status||(e.status=405),y(e,t)}}));const R=T,P=(0,s.Router)();P.post("/create",g,(async(e,t)=>{console.log("______Peticion recibida para crear",e.body);const{name:s,type:a,description:o,price:r,counterProduct:i,idRequester:d}=e.body;try{if(!await c.findOne({where:{id:[d]}}))throw{message:"Requester User does not exists",status:400,path:`IdUserRequester ${d}`};let e;if(console.log(s,a,o,r,i,d),0==i)e=await m.create({name:s,type:a,description:o,price:r,available:!1,userId:d});else if(1==i)e=await m.create({name:s,type:a,description:o,price:r,available:!0,userId:d});else if(i>1){let t=[];for(let e=0;e<i;e++)t.push({name:s,description:o,price:r,type:a,available:!0});e=await m.bulkCreate(t)}return t.status(200).json({success:!0,message:"Product Created successfully",data:e})}catch(e){return e.status||(e.status=405),y(e,t)}})),P.delete("/delete/:idProduct",g,(async(e,t)=>{console.log("=====_____Peticion recibida para eliminar producto",e.body);let s=e.params?.idProduct;try{if(!await m.findOne({where:{id:s}}))throw{message:"Requested Product to delete does not exists",status:400,path:`IdProductRequested ${s}`};return await m.destroy({where:{id:s}}),t.status(200).json({success:!0,message:"Product deleted succesfully"})}catch(e){return e.status||(e.status=405),y(e,t)}})),P.get("/getAll",g,(async(e,t)=>{console.log("=====_____Peticion recibida para modificar",e.body);try{const e=await m.findAll({include:[{model:c,attributes:{exclude:["password","retriesPassword","timerDisableAccount","state","createdAt","updatedAt"]}}]});if(!e)throw{message:"There are no product/s",status:400,path:"Products"};return t.status(200).json({success:!0,message:"List Of all current product/s",data:e})}catch(e){return e.status||(e.status=405),y(e,t)}})),P.post("/get",g,(async(e,t)=>{console.log("=====_____Peticion recibida para modificar",e.body);const{name:s,type:a,description:o,price:r,available:i,idRequired:d}=e.body;let n={};d&&(n.id=d),s&&(n.name=s),a&&(n.type=a),r&&(n.price=r),o&&(n.description=o),i&&(n.available=i);try{const e=await m.findAll({include:[{model:c,attributes:{exclude:["password","retriesPassword","timerDisableAccount","state","createdAt","updatedAt"]}}],where:{...n}});if(console.log(JSON.stringify(n)),!e||0==e.length)throw{message:"There are no Product/s with the attributes",status:400,path:n};return t.status(200).json({success:!0,message:"Product/s with desired search are those",data:customer})}catch(e){return e.status||(e.status=405),y(e,t)}})),P.post("/modify/:idProduct",g,(async(e,t)=>{console.log("=====_____Peticion recibida para modificar prodicto",e.body);let s=parseInt(e.params?.idProduct),{name:a,description:o,price:r,type:i,counterProduct:d,idsAssociated:n,idRequester:u}=e.body;console.log(a,o,r,i,d,n,s);try{const e=await m.findOne({where:{id:s}});if(!e||e.length<=0)throw{message:"Requested Modify Product does not exist",status:400,path:`IdProductRequested ${s}`};if(-1==d)return console.log(n),await m.destroy({where:{id:n}}),t.status(200).json({success:!0,message:"Product modified succesfully"});if(d==n.length)return await m.update({name:a,description:o,price:r,type:i,available:!0},{where:{id:n}}),t.status(200).json({success:!0,message:"Product/s modified succesfully"});if(0==d){let e=[...n];return console.log(e,e.indexOf(s)),-1!=e.indexOf(s)&&e.splice(e.indexOf(s),1),console.log(e,e.indexOf(s)),await m.update({name:a,description:o,price:r,type:i,available:!1},{where:{id:s}}),await m.destroy({where:{id:e}}),t.status(200).json({success:!0,message:"Product/s modified succesfully"})}if(d<n.length){console.log(n);let e=[...n];console.log(e,e.indexOf(s)),-1!=e.indexOf(s)&&e.splice(e.indexOf(s),1);let u=e.splice(0,--d),c=e;return console.log(c,u,s),await m.update({name:a,description:o,price:r,type:i,available:!0},{where:{id:[...u,s]}}),await m.destroy({where:{id:c}}),t.status(200).json({success:!0,message:"Product/s modified succesfully"})}if(d>n.length){let e=d-n.length,s=[];console.log(n,e);for(let t=0;t<e;t++)s.push({name:a,description:o,price:r,type:i,available:!0,userId:u});return console.log(s),await m.update({name:a,description:o,price:r,type:i,available:!0},{where:{id:n}}),await m.bulkCreate(s),t.status(200).json({success:!0,message:"Product/s modified and created succesfully"})}throw{message:"Problem not specified, please contact your ADMIN",status:400,path:`IdProductRequested ${s}`}}catch(e){return console.log(e),e.status||(e.status=405),y(e,t)}}));const I=P,q=(0,s.Router)();q.post("/create",g,(async(e,t)=>{console.log("|||||||||||||||| CREAREMOS QUOTE",e.body);const{id:s,description:o,discountType:r,discount:i,total:d,subTotal:n,deliveryType:u,state:h,products:w,idUserRequester:g,emailCustomerRequester:f}=e.body;try{const e=await c.findOne({where:{id:[g]}});if(!e)throw{message:"Requester User does not exists",status:400,path:`IdUserRequester ${g}`};const y=await p.findOne({where:{email:[f]}});if(!y)throw{message:"Requester Customer does not exists",status:400,path:`EmailUserCustomer ${f}`};const b=await m.findAll({where:{id:{[a.Op.in]:w}}});if(console.log(b.length,w.length,e,y),b.length!==w.length)throw{message:"Required products for Quote no exist",status:400,path:`IdProductsRequired ${w.toString()}`};{const c=await l.create({id:s,description:o,discountType:r,discount:i,total:d,subTotal:n,deliveryType:u,state:h,customerId:y.dataValues.id,userId:e.dataValues.id}),p=await m.update({available:!1},{where:{id:{[a.Op.in]:w}}}),g=await m.findAll({where:{id:{[a.Op.in]:w}}});return console.log(p,g),g.map((e=>{c.addProduct(e)})),console.log(c),t.status(200).json({success:!0,message:"Quote Created successfully",data:c})}}catch(e){return e.status||(e.status=405),y(e,t)}})),q.delete("/delete/:idQuote",g,(async(e,t)=>{console.log("=====_____Peticion recibida para eliminar",e.body);let s=e.params?.idQuote;const{idUserRequester:o}=e.body;try{if(!await c.findOne({where:{id:[o]}}))throw{message:"Requester User does not exists",status:400,path:`IdUserRequester ${o}`};const e=await l.findOne({where:{id:s},include:[{model:m,attributes:{exclude:["createdAt","updatedAt","products_quotes"]}}]});if(!e)throw{message:"Requested Quote to delete does not exists",status:400,path:`IdQuoteRequested ${s}`};console.log(e);const r=await e.getProducts(),i=[];return r.map((e=>{i.push(e.dataValues.id)})),console.log(i),await m.update({available:!0},{where:{id:{[a.Op.in]:i}}}),await l.destroy({where:{id:s}}),t.status(200).json({success:!0,message:"Quote deleted succesfully"})}catch(e){return e.status||(e.status=405),y(e,t)}})),q.get("/getAll",g,(async(e,t)=>{console.log("|||||||| GET ALL QUOTES",e.body);try{const e=await l.findAll({include:[{model:c,attributes:{exclude:["password","retriesPassword","timerDisableAccount","state","createdAt","updatedAt"]},include:{model:u,attributes:{exclude:["createdAt","updatedAt","id"]}}},{model:p,attributes:{exclude:["createdAt","updatedAt","userId"]}},{model:m,attributes:{exclude:["createdAt","updatedAt","products_quotes"]}}]});if(!e)throw{message:"There are no quote/s",status:400,path:"Quotes"};return t.status(200).json({success:!0,message:"List Of all current quote/s",data:e})}catch(e){return console.log(e),e.status||(e.status=405),y(e,t)}})),q.post("/get",g,(async(e,t)=>{console.log("=====_____get quote",e.body);const{id:s,description:a,discountType:o,discount:r,deliveryType:i,state:d,idUserRequester:n}=e.body;let h={};o&&(h.discountType=o),r&&(h.discount=r),i&&(h.deliveryType=i),d&&(h.state=d),null!==n&&(h.userId=n);try{const e=await l.findAll({include:[{model:c,attributes:{exclude:["password","retriesPassword","timerDisableAccount","state","createdAt","updatedAt"]},include:{model:u,attributes:{exclude:["createdAt","updatedAt","id"]}}},{model:p,attributes:{exclude:["createdAt","updatedAt","userId"]}},{model:m,attributes:{exclude:["createdAt","updatedAt","products_quotes"]}}],where:{...h}});if(console.log(JSON.stringify(h)),!e||0==e.length)throw{message:"There are no Quote/s with the attributes",status:400,path:h};return t.status(200).json({success:!0,message:"Quote/s with desired search are those",data:e})}catch(e){return e.status||(e.status=405),y(e,t)}})),q.post("/modify/:idQuote",g,(async(e,t)=>{console.log("=====_____Peticion recibida para modificar",e.body);const{id:s,description:o,discountType:r,discount:i,total:d,subTotal:n,deliveryType:u,state:h,products:w,idUserRequester:g,emailCustomerRequester:f}=e.body;let b=e.params?.idQuote,_={};s&&(_.id=s),o&&(_.description=o),r&&(_.discountType=r),i&&(_.discount=i),null!==d&&(_.total=d),null!==n&&(_.subTotal=n),u&&(_.deliveryType=u),h&&(_.state=h);try{if(!await c.findOne({where:{id:[g]}}))throw{message:"Requester User does not exists",status:400,path:`IdUserRequester ${g}`};const e=await p.findOne({where:{email:[f]}});if(!e)throw{message:"Requester Customer does not exists",status:400,path:`EmailUserCustomer ${f}`};const s=await l.findOne({where:{id:[b]}});if(!s)throw{message:"Requester Quote does not exists",status:400,path:`idQuote ${b}`};const o=await m.findAll({where:{id:{[a.Op.in]:w}}});if(o.length!==w.length)throw{message:"Required products for Quote no exist",status:400,path:`IdProductsRequired ${w.toString()}`};const r=o.reduce(((e,t)=>(e.push(t.dataValues.id),e)),[]),i=await s.getProducts(),d=i.reduce(((e,t)=>(e.push(t.dataValues.id),e)),[]);if(console.log("\\\\\\\\\\\\\\\\\\\\eeeee",i,w,d),w.length<d.length){const e=[...w,...d].filter((e=>-1===w.indexOf(e)||-1===d.indexOf(e))),t=i.reduce(((t,s)=>(e.includes(s.dataValues.id)||t.push(s),t)),[]);console.log(e,t,d),i.map((async e=>{await s.removeProduct(e)})),await m.update({available:!0},{where:{id:{[a.Op.in]:e}}}),t.map((async e=>{await s.addProduct(e)})),await s.save(),console.log(s)}else w.length>d.length?(console.log("Product modified succesfully",d,r),i.map((async e=>{await s.removeProduct(e)})),await m.update({available:!1},{where:{id:{[a.Op.in]:r}}}),s.addProducts(o),await s.save()):"Canceled"==h&&(i.map((async e=>{await s.removeProduct(e)})),await m.update({available:!0},{where:{id:{[a.Op.in]:r}}}),_.description=`Quote eliminated, products were restaured as available: ${r.toString()}`,await s.save());return _.customerId=e.dataValues.id,await l.update({..._},{where:{id:b}}),t.status(200).json({success:!0,message:"Product modified succesfully"})}catch(e){return e.status||(e.status=405),y(e,t)}}));const D=q;Date.prototype.addMinutes=function(e){return this.setTime(this.getTime()+60*e*1e3),this},Date.prototype.minutesDiff=function(e){var t=(this.getTime()-e.getTime())/1e3;return t/=60,Math.abs(Math.round(t))},e.config(),function(){var e;const a="8080";(e=s()).use(s.json()),e.use(t()),e.use("/api/auth",A),e.use("/api/user",b),e.use("/api/customer",R),e.use("/api/product",I),e.use("/api/quote",D),(async()=>{try{await r.authenticate().then((async()=>{(()=>{const e=e=>({...e,onDelete:"CASCADE",onUpdate:"CASCADE"});u.hasOne(c,e({foreignKey:"roleId"})),c.belongsTo(u),c.hasMany(p,e({foreignKey:"userId"})),p.belongsTo(c),c.hasMany(m,e({foreignKey:"userId"})),m.belongsTo(c),m.belongsToMany(l,e({through:"products_quotes"})),l.belongsToMany(m,e({through:"products_quotes"})),p.hasMany(l,e({foreignKey:"customerId"})),l.belongsTo(p),c.hasMany(l,e({foreignKey:"userId"})),l.belongsTo(c)})(),await r.sync({force:!1})})).catch((e=>{console.error(e)})),u.findOrCreate({where:{name:"ADMIN"},defaults:{name:"ADMIN",description:"Admin with priviligies over normal user"}}),u.findOrCreate({where:{name:"USER"},defaults:{name:"USER",description:"Regular user with actions with no priviligies"}}),console.log("DB connected")}catch(e){console.log(e)}})(),e.listen(a,(()=>{console.log(`App is executing on port${a}`)}))}()})();